"use strict";

(function () {
  var fragment = document.createDocumentFragment();
  var PhotoBlockInit = function PhotoBlockInit(index) {
    this.url = "photos/".concat(index + 1, ".jpg");
    this.likes = Math.floor(Math.random() * window.dataTest.MAX_RANDOM_LICKES) + window.dataTest.MIN_RANDOM_LICKES;
    this.comments = randomComments();
    this.desckription = window.dataTest.DESCKRIPTION[Math.floor(Math.random() * window.dataTest.DESCKRIPTION.length)];
    function randomComments() {
      var comment = [];
      var commentsAmount = Math.floor(Math.random() * window.dataTest.MAX_RANDOM_COMMENTS) + 1;
      for (var i = 0; i < commentsAmount; i++) {
        var tmp = examinationRandomComment(comment);
        comment[i] = window.dataTest.COMMENTS[tmp];
      }
      return comment;
    }
    function examinationRandomComment(comment) {
      var commentRandom = Math.floor(Math.random() * window.dataTest.COMMENTS.length);
      for (var i = 0; i <= comment.length; i++) {
        while (comment.includes(window.dataTest.COMMENTS[commentRandom])) {
          commentRandom = Math.floor(Math.random() * window.dataTest.COMMENTS.length);
        }
      }
      return commentRandom;
    }
  };
  var doNewPhotoList = function doNewPhotoList() {
    var photosBlock = [];
    for (var i = 0; i < window.dataTest.COUNT_PHOTOS; i++) {
      photosBlock[i] = new PhotoBlockInit(i);
    }
    return photosBlock;
  };
  var listPicturesBlock = doNewPhotoList();
  function initPhoto() {
    for (var i = 0; i < listPicturesBlock.length; i++) {
      fragment.appendChild((listPicturesBlock[i], i));
    }
    document.querySelector('.pictures').appendChild(fragment);
  }
  var renderPictures = function renderPictures(picture, index) {
    var pictureTemplate = document.querySelector('#picture').content.querySelector('.picture');
    var pictureElement = pictureTemplate.cloneNode(true);
    pictureElement.querySelector('img').src = picture.url;
    pictureElement.querySelector('.picture__comments').textContent = picture.comments.length;
    pictureElement.querySelector('.picture__likes').textContent = picture.likes;
    pictureElement.name = index;
    return pictureElement;
  };
  initPhoto();
  window.renderListPicturesBlock = listPicturesBlock;
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLWxpc3QtcGljdHVyZXMtYmxvY2suanMiLCJuYW1lcyI6WyJmcmFnbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsIlBob3RvQmxvY2tJbml0IiwiaW5kZXgiLCJ1cmwiLCJjb25jYXQiLCJsaWtlcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIndpbmRvdyIsImRhdGFUZXN0IiwiTUFYX1JBTkRPTV9MSUNLRVMiLCJNSU5fUkFORE9NX0xJQ0tFUyIsImNvbW1lbnRzIiwicmFuZG9tQ29tbWVudHMiLCJkZXNja3JpcHRpb24iLCJERVNDS1JJUFRJT04iLCJsZW5ndGgiLCJjb21tZW50IiwiY29tbWVudHNBbW91bnQiLCJNQVhfUkFORE9NX0NPTU1FTlRTIiwiaSIsInRtcCIsImV4YW1pbmF0aW9uUmFuZG9tQ29tbWVudCIsIkNPTU1FTlRTIiwiY29tbWVudFJhbmRvbSIsImluY2x1ZGVzIiwiZG9OZXdQaG90b0xpc3QiLCJwaG90b3NCbG9jayIsIkNPVU5UX1BIT1RPUyIsImxpc3RQaWN0dXJlc0Jsb2NrIiwiaW5pdFBob3RvIiwiYXBwZW5kQ2hpbGQiLCJxdWVyeVNlbGVjdG9yIiwicmVuZGVyUGljdHVyZXMiLCJwaWN0dXJlIiwicGljdHVyZVRlbXBsYXRlIiwiY29udGVudCIsInBpY3R1cmVFbGVtZW50IiwiY2xvbmVOb2RlIiwic3JjIiwidGV4dENvbnRlbnQiLCJuYW1lIiwicmVuZGVyTGlzdFBpY3R1cmVzQmxvY2siXSwic291cmNlcyI6WyJyZW5kZXItbGlzdC1waWN0dXJlcy1ibG9jay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xuICB2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cbiAgdmFyIFBob3RvQmxvY2tJbml0ID0gZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgdGhpcy51cmwgPSBgcGhvdG9zLyR7aW5kZXggKyAxfS5qcGdgO1xuICAgIHRoaXMubGlrZXMgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB3aW5kb3cuZGF0YVRlc3QuTUFYX1JBTkRPTV9MSUNLRVMpICsgd2luZG93LmRhdGFUZXN0Lk1JTl9SQU5ET01fTElDS0VTO1xuICAgIHRoaXMuY29tbWVudHMgPSByYW5kb21Db21tZW50cygpO1xuICAgIHRoaXMuZGVzY2tyaXB0aW9uID0gd2luZG93LmRhdGFUZXN0LkRFU0NLUklQVElPTltNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB3aW5kb3cuZGF0YVRlc3QuREVTQ0tSSVBUSU9OLmxlbmd0aCldO1xuXG4gICAgZnVuY3Rpb24gcmFuZG9tQ29tbWVudHMoKSB7XG4gICAgICB2YXIgY29tbWVudCA9IFtdO1xuICAgICAgdmFyIGNvbW1lbnRzQW1vdW50ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd2luZG93LmRhdGFUZXN0Lk1BWF9SQU5ET01fQ09NTUVOVFMpICsgMTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21tZW50c0Ftb3VudDsgaSsrKSB7XG4gICAgICAgIHZhciB0bXAgPSBleGFtaW5hdGlvblJhbmRvbUNvbW1lbnQoY29tbWVudCk7XG4gICAgICAgIGNvbW1lbnRbaV0gPSB3aW5kb3cuZGF0YVRlc3QuQ09NTUVOVFNbdG1wXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb21tZW50O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGV4YW1pbmF0aW9uUmFuZG9tQ29tbWVudChjb21tZW50KSB7XG4gICAgICB2YXIgY29tbWVudFJhbmRvbSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHdpbmRvdy5kYXRhVGVzdC5DT01NRU5UUy5sZW5ndGgpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8PSBjb21tZW50Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHdoaWxlIChjb21tZW50LmluY2x1ZGVzKHdpbmRvdy5kYXRhVGVzdC5DT01NRU5UU1tjb21tZW50UmFuZG9tXSkpIHtcbiAgICAgICAgICBjb21tZW50UmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd2luZG93LmRhdGFUZXN0LkNPTU1FTlRTLmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBjb21tZW50UmFuZG9tO1xuICAgIH1cbiAgfTtcblxuICB2YXIgZG9OZXdQaG90b0xpc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBob3Rvc0Jsb2NrID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHdpbmRvdy5kYXRhVGVzdC5DT1VOVF9QSE9UT1M7IGkrKykge1xuICAgICAgcGhvdG9zQmxvY2tbaV0gPSBuZXcgUGhvdG9CbG9ja0luaXQoaSk7XG4gICAgfVxuICAgIHJldHVybiBwaG90b3NCbG9jaztcbiAgfTtcblxuICB2YXIgbGlzdFBpY3R1cmVzQmxvY2sgPSBkb05ld1Bob3RvTGlzdCgpO1xuXG4gIGZ1bmN0aW9uIGluaXRQaG90bygpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RQaWN0dXJlc0Jsb2NrLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZCgobGlzdFBpY3R1cmVzQmxvY2tbaV0sIGkpKTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGljdHVyZXMnKS5hcHBlbmRDaGlsZChmcmFnbWVudCk7XG4gIH1cblxuICB2YXIgcmVuZGVyUGljdHVyZXMgPSBmdW5jdGlvbiAocGljdHVyZSwgaW5kZXgpIHtcbiAgICB2YXIgcGljdHVyZVRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BpY3R1cmUnKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5waWN0dXJlJyk7XG4gICAgdmFyIHBpY3R1cmVFbGVtZW50ID0gcGljdHVyZVRlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHBpY3R1cmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2ltZycpLnNyYyA9IHBpY3R1cmUudXJsO1xuICAgIHBpY3R1cmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5waWN0dXJlX19jb21tZW50cycpLnRleHRDb250ZW50ID0gcGljdHVyZS5jb21tZW50cy5sZW5ndGg7XG4gICAgcGljdHVyZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBpY3R1cmVfX2xpa2VzJykudGV4dENvbnRlbnQgPSBwaWN0dXJlLmxpa2VzO1xuICAgIHBpY3R1cmVFbGVtZW50Lm5hbWUgPSBpbmRleDtcbiAgICByZXR1cm4gcGljdHVyZUVsZW1lbnQ7XG4gIH07XG5cbiAgaW5pdFBob3RvKCk7XG4gIHdpbmRvdy5yZW5kZXJMaXN0UGljdHVyZXNCbG9jayA9IGxpc3RQaWN0dXJlc0Jsb2NrO1xufSgpKTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQyxhQUFZO0VBQ1gsSUFBSUEsUUFBUSxHQUFHQyxRQUFRLENBQUNDLHNCQUFzQixFQUFFO0VBRWhELElBQUlDLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FBYUMsS0FBSyxFQUFFO0lBQ3BDLElBQUksQ0FBQ0MsR0FBRyxhQUFBQyxNQUFBLENBQWFGLEtBQUssR0FBRyxDQUFDLFNBQU07SUFDcEMsSUFBSSxDQUFDRyxLQUFLLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRCxJQUFJLENBQUNFLE1BQU0sRUFBRSxHQUFHQyxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsaUJBQWlCLENBQUMsR0FBR0YsTUFBTSxDQUFDQyxRQUFRLENBQUNFLGlCQUFpQjtJQUM5RyxJQUFJLENBQUNDLFFBQVEsR0FBR0MsY0FBYyxFQUFFO0lBQ2hDLElBQUksQ0FBQ0MsWUFBWSxHQUFHTixNQUFNLENBQUNDLFFBQVEsQ0FBQ00sWUFBWSxDQUFDVixJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLEVBQUUsR0FBR0MsTUFBTSxDQUFDQyxRQUFRLENBQUNNLFlBQVksQ0FBQ0MsTUFBTSxDQUFDLENBQUM7SUFFakgsU0FBU0gsY0FBY0EsQ0FBQSxFQUFHO01BQ3hCLElBQUlJLE9BQU8sR0FB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